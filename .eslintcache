[{"C:\\Users\\rajith\\Desktop\\app\\src\\index.js":"1","C:\\Users\\rajith\\Desktop\\app\\src\\App.js":"2","C:\\Users\\rajith\\Desktop\\app\\src\\reportWebVitals.js":"3","C:\\Users\\rajith\\Desktop\\app\\src\\Reducers\\index.js":"4","C:\\Users\\rajith\\Desktop\\app\\src\\Reducers\\ProductReducer.js":"5","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\LandingPage.js":"6","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\Product.js":"7","C:\\Users\\rajith\\Desktop\\app\\src\\Actions\\ProductActions.js":"8","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\FilterPage.js":"9","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\SortPage.js":"10"},{"size":453,"mtime":1608392945805,"results":"11","hashOfConfig":"12"},{"size":167,"mtime":1608387687003,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":184,"mtime":1608387721183,"results":"15","hashOfConfig":"12"},{"size":1202,"mtime":1608471753303,"results":"16","hashOfConfig":"12"},{"size":4793,"mtime":1608578488559,"results":"17","hashOfConfig":"12"},{"size":804,"mtime":1608474213998,"results":"18","hashOfConfig":"12"},{"size":951,"mtime":1608468550194,"results":"19","hashOfConfig":"12"},{"size":2399,"mtime":1608579510995,"results":"20","hashOfConfig":"12"},{"size":490,"mtime":1608577056906,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wz1lfq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\rajith\\Desktop\\app\\src\\index.js",[],["48","49"],"C:\\Users\\rajith\\Desktop\\app\\src\\App.js",[],"C:\\Users\\rajith\\Desktop\\app\\src\\reportWebVitals.js",[],"C:\\Users\\rajith\\Desktop\\app\\src\\Reducers\\index.js",["50"],"import { combineReducers } from 'redux';\r\nimport ProductReducer from './ProductReducer';\r\n\r\nconst rootReducers = combineReducers({\r\n\tProductReducer\r\n});\r\nexport default rootReducers;","C:\\Users\\rajith\\Desktop\\app\\src\\Reducers\\ProductReducer.js",["51"],"let initialState= {\r\n\tloading: false,\r\n\tproductTitle: \"\",\r\n\ttotalCount: 0,\r\n\tproducts: [],\r\n\tsortOptions: [],\r\n\tfilterOptions: [],\r\n\tselectedFilterMain: \"category\",\r\n\tselectedSubFilters: []\r\n};\r\n\r\nexport default (state=initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase \"LOADING_STATUS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\tcase \"PRODUCT_DATA\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproductTitle: action.payload.data.title,\r\n\t\t\t\ttotalCount: action.payload.data.totalCount,\r\n\t\t\t\tproducts: action.payload.data.products,\r\n\t\t\t\tsortOptions: action.payload.data.sorts,\r\n\t\t\t\tfilterOptions: action.payload.data.aggregations,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase \"SELECT_MAIN_FILTER\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedFilterMain: action.payload\r\n\t\t\t}\r\n\t\tcase \"SELECT_SUB_FILTER\":\r\n\t\t\tlet sf = [...state.selectedSubFilters];\r\n\t\t\tif(sf.indexOf(action.payload) !== -1){\r\n\t\t\t\tsf.splice(sf.indexOf(action.payload), 1);\r\n\t\t\t}else{\r\n\t\t\t\tsf.push(action.payload);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedSubFilters: sf\r\n\t\t\t}\r\n\t\tcase \"CLEAR_FILTERS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedFilterMain: \"category\",\r\n\t\t\t\tselectedSubFilters: []\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\LandingPage.js",["52"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { getProductData } from './../Actions/ProductActions';\r\n\r\nimport Product from \"./Product\";\r\nimport FilterPage from './FilterPage';\r\nimport SortPage from './SortPage';\r\n\r\nclass LandingPage extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      listViewEnabled: false,\r\n      filterViewEnabled: false,\r\n      sortViewEnabled: false\r\n    }\r\n  }\r\n\r\n  enableListView = () => {\r\n    this.setState(prevState  => {\r\n      return {\r\n        ...prevState,\r\n        listViewEnabled : !prevState.listViewEnabled\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleFilterView = () => {\r\n    this.setState(prevState  => {\r\n      return {\r\n        ...prevState,\r\n        filterViewEnabled : !prevState.filterViewEnabled\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleSortView = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        sortViewEnabled: !prevState.sortViewEnabled\r\n      }\r\n    })\r\n  }\r\n\r\n  filterParams = () => {\r\n    let filterParameters = [];\r\n    this.props.filters.forEach((main) => {\r\n      main.buckets.forEach((sub) => {\r\n        if(this.props.selectedSubFilters.includes(sub.key)){\r\n          filterParameters.push(encodeURIComponent(main.name) + '=' + encodeURIComponent(sub.key));\r\n        }\r\n      })\r\n    })\r\n    return filterParameters.join('&');\r\n  }\r\n\r\n  applyFilters = () => {\r\n    this.props.getProductData(this.filterParams());\r\n    this.setState({\r\n      filterViewEnabled: false\r\n    });\r\n  }\r\n\r\n  applySort = ( value ) => {\r\n    let filtersApplied = this.filterParams(),\r\n    queryParams = \"\";\r\n    if(filtersApplied){\r\n      queryParams = filtersApplied+\"&sort=\"+value+\":desc\";\r\n    }else{\r\n      queryParams = \"&sort=\"+value+\":desc\";\r\n    }\r\n    this.props.getProductData(queryParams);\r\n    this.setState({\r\n      sortViewEnabled: false\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getProductData();\r\n  }\r\n\r\n  render() {\r\n    const { \r\n      products, \r\n      filters, \r\n      sorts, \r\n      selectedFilterMain, \r\n      selectedSubFilters,\r\n      productTitle,\r\n      totalCount \r\n    } = this.props;\r\n    let productClass = \"product-container\";\r\n    if(this.state.listViewEnabled){\r\n      productClass += \" product-list-view\";\r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"container\">\r\n        {!this.state.filterViewEnabled &&\r\n        <div className=\"fixed-header\">\r\n          <div className=\"top-nav\">\r\n              <span className=\"side-menu\" style={{marginRight: \"10px\"}}></span>\r\n              <img className=\"logo\" src=\"https://storage.googleapis.com/hng-static/social-icons/logo_hng_big.svg\" width=\"175\"/>\r\n          </div>\r\n          <div className=\"search-result\">\r\n              <div className=\"product-name\">{productTitle} <span className=\"product-count\" style={{color:\"grey\"}}>- {totalCount} Products</span></div>\r\n              <div className=\"actions\">\r\n                <button className=\"action-btn list-view\" style={{color:\"grey\"}} onClick={this.enableListView}>&#9868;</button>\r\n                <button className=\"action-btn sort\" onClick={this.toggleSortView}>Sort</button>\r\n                <button className=\"action-btn filter\" onClick={this.toggleFilterView}>Filter</button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      }\r\n        <div className=\"main-content\">\r\n          <div className=\"location\">\r\n            Deliver to Home - Banglore 560100\r\n          </div>\r\n          <div className={productClass}>\r\n            {\r\n              products.map((d, i) => {\r\n                return <Product key={d.skuId} d={d}/>\r\n              })\r\n            }\r\n          </div>\r\n          </div>\r\n      </div>\r\n      {\r\n          this.state.filterViewEnabled && \r\n             <FilterPage \r\n              filters={filters} \r\n              selectedFilter={selectedFilterMain}\r\n              selectedSubFilters={selectedSubFilters}\r\n              applyFilters={this.applyFilters}\r\n              onClose={this.toggleFilterView}/>\r\n      }\r\n      {\r\n        this.state.sortViewEnabled &&\r\n          <SortPage\r\n            sorts={sorts}\r\n            onClose={this.toggleSortView}\r\n            applySort={this.applySort}/>\r\n      }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.ProductReducer.products,\r\n  sorts : state.ProductReducer.sortOptions,\r\n  filters: state.ProductReducer.filterOptions,\r\n  selectedFilterMain: state.ProductReducer.selectedFilterMain,\r\n  selectedSubFilters: state.ProductReducer.selectedSubFilters,\r\n  productTitle: state.ProductReducer.productTitle,\r\n  totalCount: state.ProductReducer.totalCount\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProductData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\Product.js",["53"],"import React, { Component } from \"react\";\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n\r\n    const { d } = this.props;\r\n    return (\r\n\r\n      <div className=\"product\">\r\n        <div className=\"product-header\">\r\n          <span className=\"has-special-offer\">Special Offer</span>\r\n          <span className=\"add-to-favorite\"></span>\r\n        </div>\r\n        <div className=\"product-img\">\r\n          <img src={d.skuImageUrl} />\r\n        </div>\r\n        <div className=\"product-title\">{d.skuName}</div>\r\n        <div className=\"product-footer\">\r\n          <span className=\"price\" style={{color:\"#e6005c\"}}>&#x20B9; {d.listPrice}</span>\r\n          <span className={d.skuAverageRating?\"has-rating\":\"\"}>{d.skuAverageRating||<></>}</span>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n","C:\\Users\\rajith\\Desktop\\app\\src\\Actions\\ProductActions.js",[],"C:\\Users\\rajith\\Desktop\\app\\src\\Components\\FilterPage.js",["54","55"],"import React, { Component } from \"react\";\r\nimport './../filter-page.css';\r\nimport { selectMainFilterAction, selectSubFilterAction, clearFiltersAction } from './../Actions/ProductActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass FilterPage extends Component {\r\n\r\n  subCategoryList = (filters, selectedFilter) => {\r\n    let list = [];\r\n    filters.filter(f => selectedFilter == f.name).forEach((d) => {\r\n        d.buckets.forEach((filter) => {\r\n          let liClass = this.props.selectedSubFilters.includes(filter.key)?\"selected\":\"not-selected\";\r\n          list.push(\r\n            <li key={filter.key} onClick={() => this.props.selectSubFilterAction(filter.key)}>\r\n              {filter.text+\" (\"+filter.docCount+\")\"}\r\n              <span class={\"filter \"+liClass}></span>\r\n            </li>\r\n          );\r\n        });\r\n    });\r\n    return list;\r\n  };\r\n\r\n\trender(){\r\n\r\n    const { filters, selectedFilter } = this.props;\r\n\t\treturn(\r\n\t\t\t<div className=\"filter-page-container\">\r\n        <div className=\"header\">\r\n          <span style={{fontSize:\"18px\",fontWeight:\"bold\",cursor:\"pointer\"}} className=\"close\" onClick={() => this.props.onClose()}>&#9747;</span>\r\n          <h3 style={{color:\"black\"}}>Filter By</h3>\r\n          <span style={{cursor:\"pointer\"}} className=\"clear-all\" onClick={() => this.props.clearFiltersAction()}>Clear All</span>\r\n        </div>\r\n        <main>\r\n          <section className=\"main-filters\">\r\n            <ul>\r\n              {\r\n                filters.map((d) => {\r\n                  let liClass = selectedFilter == d.name ? \"active\" : \"\";\r\n                  return (\r\n                    <li key={d.name} className={liClass} onClick={() => this.props.selectMainFilterAction(d.name)}>{d.text}</li>\r\n                  );\r\n                })\r\n              }\r\n            </ul>\r\n          </section>\r\n          <section className=\"sub-filters\">\r\n            <ul>\r\n              {\r\n                this.subCategoryList(filters, selectedFilter)\r\n              }\r\n            </ul>\r\n          </section>\r\n        </main>\r\n        <div className=\"footer\" style={{cursor:\"pointer\"}}>\r\n          <span onClick={() => this.props.applyFilters()}>Apply</span>\r\n        </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  selectMainFilterAction,\r\n  selectSubFilterAction,\r\n  clearFiltersAction\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(FilterPage);","C:\\Users\\rajith\\Desktop\\app\\src\\Components\\SortPage.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":7,"nodeType":"62","messageId":"63","endLine":4,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":12,"column":1,"nodeType":"66","endLine":54,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":105,"column":15,"nodeType":"69","endLine":105,"endColumn":128},{"ruleId":"67","severity":1,"message":"68","line":15,"column":11,"nodeType":"69","endLine":15,"endColumn":38},{"ruleId":"70","severity":1,"message":"71","line":10,"column":40,"nodeType":"72","messageId":"73","endLine":10,"endColumn":42},{"ruleId":"70","severity":1,"message":"71","line":39,"column":48,"nodeType":"72","messageId":"73","endLine":39,"endColumn":50},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'rootReducers' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]